# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI 

on:
  push:
    branches: [ dev, master ]
  pull_request:
    branches: [ dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: CheckOut
      uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Access to application secrets
      run: |
        echo $APPLICATION >> ./footprint/src/main/resources/application.yml
      env:
        APPLICATION: ${{secrets.APPLICATION}}
        
    - name: Access to aws secrets
      run: |
        echo $AWS >> ./footprint/src/main/resources/aws.yml
      env:
        AWS: ${{secrets.AWS}}      
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./footprint/gradlew
        
    - name: Build with Gradle
      working-directory: ./footprint
      run: ./gradlew build
      
    - name: Build Docker Image
      working-directory: ./footprint
      run: docker build -t sangmin715/footprint .
    
    - name: Docker Hub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Docker Hub Publish
      run: docker push sangmin715/footprint
      
    - name: Publish Unit Test Results # test 후 result를 보기 위해 추가
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: ${{ always() }} # test가 실패해도 report를 남기기 위해 설정
      with:
        files: build/test-results/**/*.xml
