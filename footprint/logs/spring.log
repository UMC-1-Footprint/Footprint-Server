02:09:45.212+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 8824 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
02:09:45.217+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
02:09:45.657+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:09:45.669+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
02:09:45.751+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
02:09:45.870+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:09:45.872+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:09:45.878+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:09:45.879+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:09:45.880+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:09:46.060+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
02:09:46.066+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
02:09:46.066+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
02:09:46.066+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
02:09:46.169+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
02:09:46.169+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 928 ms
02:09:46.240+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
02:09:46.433+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
02:09:46.464+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
02:09:46.496+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
02:09:46.583+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
02:09:46.605+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
02:09:46.673+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
02:09:46.761+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02:09:46.767+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
02:09:47.054+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:09:47.185+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
02:09:47.306+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
02:09:47.318+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
02:09:47.327+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.352 seconds (JVM running for 3.774)
02:22:53.889+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
02:22:53.891+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
02:22:53.898+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
02:22:59.582+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 14264 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
02:22:59.586+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
02:23:00.073+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:23:00.088+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 JPA repository interfaces.
02:23:00.209+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
02:23:00.338+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:23:00.340+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:23:00.345+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:23:00.346+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:23:00.346+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:23:00.551+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
02:23:00.559+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
02:23:00.560+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
02:23:00.561+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
02:23:00.674+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
02:23:00.674+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1051 ms
02:23:00.764+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
02:23:01.027+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
02:23:01.061+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
02:23:01.090+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
02:23:01.179+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
02:23:01.206+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
02:23:01.290+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
02:23:01.397+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02:23:01.407+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
02:23:01.751+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:23:01.878+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
02:23:02.038+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
02:23:02.060+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
02:23:02.077+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.783 seconds (JVM running for 4.496)
02:23:44.619+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
02:23:44.619+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
02:23:44.620+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
02:23:44.786+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
02:25:20.636+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
02:25:20.637+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
02:25:20.643+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
02:25:25.225+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 10380 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
02:25:25.229+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
02:25:25.668+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:25:25.680+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
02:25:25.758+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
02:25:25.872+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7b1e5e55' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:25:25.873+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#661fe025' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:25:25.877+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#65e22def' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:25:25.878+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:25:25.879+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:25:26.053+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
02:25:26.059+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
02:25:26.059+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
02:25:26.059+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
02:25:26.154+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
02:25:26.154+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 902 ms
02:25:26.225+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
02:25:26.435+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
02:25:26.466+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
02:25:26.496+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
02:25:26.564+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
02:25:26.586+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
02:25:26.656+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
02:25:26.743+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02:25:26.750+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
02:25:27.030+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:25:27.167+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
02:25:27.286+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
02:25:27.298+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
02:25:27.308+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.334 seconds (JVM running for 3.704)
02:25:36.621+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
02:25:36.622+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
02:25:36.623+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
02:25:36.777+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
02:25:36.778+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
02:25:36.778+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 3.0
02:25:36.778+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
02:25:36.778+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
02:25:36.778+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
02:25:36.778+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
02:56:04.600+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
02:56:04.601+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
02:56:04.609+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
02:56:10.070+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 17832 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
02:56:10.074+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
02:56:10.508+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:56:10.520+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
02:56:10.602+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
02:56:10.730+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:10.731+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:10.735+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:10.736+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:10.736+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:10.908+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
02:56:10.914+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
02:56:10.915+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
02:56:10.915+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
02:56:11.029+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
02:56:11.030+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 933 ms
02:56:11.108+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
02:56:11.307+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
02:56:11.340+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
02:56:11.366+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
02:56:11.438+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
02:56:11.459+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
02:56:11.531+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
02:56:11.621+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02:56:11.627+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
02:56:11.933+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:56:12.056+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
02:56:12.174+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
02:56:12.187+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
02:56:12.197+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.374 seconds (JVM running for 3.82)
02:56:13.680+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
02:56:13.680+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
02:56:13.682+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
02:56:13.841+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
02:56:13.842+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
02:56:13.842+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
02:56:13.869+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
02:56:13.870+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
02:56:13.908+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
02:56:13.908+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
02:56:13.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 3.0
02:56:13.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
02:56:13.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
02:56:13.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
02:56:13.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
02:56:13.919+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
02:56:13.920+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
02:56:13.920+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
02:56:13.920+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: 25a65354-3c9a-4f90-8b1c-0260168fdc18.png
02:56:13.921+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
02:56:14.197+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6394c99a, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@188797f4, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@60da5853]
02:56:14.197+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/25a65354-3c9a-4f90-8b1c-0260168fdc18.png
02:56:14.198+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
02:56:14.202+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
02:56:14.204+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
02:56:14.205+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
02:56:14.205+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
02:56:14.206+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 3.0
02:56:14.206+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
02:56:14.206+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
02:56:14.206+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/25a65354-3c9a-4f90-8b1c-0260168fdc18.png
02:56:14.206+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
02:56:14.206+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
02:56:14.206+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
02:56:14.212+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 221
02:56:14.212+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
02:56:14.212+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
02:56:14.467+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
02:56:14.467+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
02:56:14.467+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
02:56:14.467+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
02:56:14.467+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
02:56:14.467+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
02:56:14.467+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
02:56:14.467+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
02:56:14.468+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
02:56:14.470+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 328
02:56:14.470+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
02:56:14.470+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
02:56:14.470+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
02:56:14.470+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 221
02:56:14.470+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
02:56:14.472+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 329
02:56:14.472+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
02:56:14.472+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
02:56:14.472+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
02:56:14.472+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 221
02:56:14.472+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
02:56:14.473+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 330
02:56:14.473+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
02:56:14.473+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
02:56:14.473+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
02:56:14.473+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 221
02:56:14.473+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
02:56:14.474+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
02:56:14.477+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
02:56:14.478+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
02:56:14.480+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
02:56:14.481+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
02:56:14.482+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [326->328, 327->329, 328->329, 329->329, 330->329, 331->330]
02:56:14.482+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
02:56:14.486+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
02:56:14.488+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스1
02:56:14.488+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스0
02:56:42.209+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
02:56:42.210+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
02:56:42.218+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
02:56:47.205+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 16420 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
02:56:47.209+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
02:56:47.676+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:56:47.690+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
02:56:47.782+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
02:56:47.899+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:47.900+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:47.905+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:47.905+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:47.906+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02:56:48.082+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
02:56:48.087+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
02:56:48.088+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
02:56:48.088+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
02:56:48.191+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
02:56:48.191+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 958 ms
02:56:48.264+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
02:56:48.471+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
02:56:48.503+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
02:56:48.541+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
02:56:48.614+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
02:56:48.637+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
02:56:48.707+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
02:56:48.802+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02:56:48.809+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
02:56:49.123+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:56:49.236+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
02:56:49.356+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
02:56:49.367+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
02:56:49.376+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.423 seconds (JVM running for 3.847)
02:56:50.976+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
02:56:50.977+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
02:56:50.978+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
02:56:51.147+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
02:56:51.147+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
02:56:51.148+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
02:56:51.168+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
02:56:51.168+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
02:56:51.203+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
02:56:51.204+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
02:56:51.204+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 3.0
02:56:51.204+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
02:56:51.204+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
02:56:51.205+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
02:56:51.205+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
02:56:51.214+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
02:56:51.214+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
02:56:51.214+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
02:56:51.215+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: eea5c3bf-1271-4450-9d9e-cae03b4e1bc6.png
02:56:51.215+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
02:56:51.497+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@265dafae, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@462f6b9, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2784f4e2]
02:56:51.498+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/eea5c3bf-1271-4450-9d9e-cae03b4e1bc6.png
02:56:51.499+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
02:56:51.502+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
02:56:51.504+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
02:56:51.505+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
02:56:51.505+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
02:56:51.506+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 3.0
02:56:51.506+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
02:56:51.506+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
02:56:51.506+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/eea5c3bf-1271-4450-9d9e-cae03b4e1bc6.png
02:56:51.506+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
02:56:51.506+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
02:56:51.506+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
02:56:51.512+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 222
02:56:51.512+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
02:56:51.512+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
02:56:51.829+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
02:56:51.829+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
02:56:51.830+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
02:56:51.831+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
02:56:51.831+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
02:56:51.832+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
02:56:51.832+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
02:56:51.832+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
02:56:51.833+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
02:56:51.841+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 331
02:56:51.841+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
02:56:51.842+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
02:56:51.842+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
02:56:51.842+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 222
02:56:51.842+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
02:56:51.844+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 332
02:56:51.844+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
02:56:51.844+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
02:56:51.844+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
02:56:51.845+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 222
02:56:51.845+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
02:56:51.847+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 333
02:56:51.847+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
02:56:51.847+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
02:56:51.847+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
02:56:51.847+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 222
02:56:51.847+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
02:56:51.847+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
02:56:51.851+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
02:56:51.852+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
02:56:51.855+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
02:56:51.856+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
02:56:51.856+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [332->331, 333->332, 334->332, 335->332, 336->332, 337->333]
02:56:51.856+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
02:56:51.859+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
02:56:51.861+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 0
02:56:51.862+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 0
03:00:17.200+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:00:17.202+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:00:17.208+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:00:21.859+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 14772 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:00:21.863+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:00:22.302+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:00:22.317+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 JPA repository interfaces.
03:00:22.413+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:00:22.526+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:00:22.527+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:00:22.532+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:00:22.533+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:00:22.533+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:00:22.703+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:00:22.708+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:00:22.708+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:00:22.708+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:00:22.803+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:00:22.803+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 915 ms
03:00:22.873+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:00:23.079+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:00:23.107+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:00:23.134+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:00:23.199+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:00:23.222+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:00:23.290+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:00:23.378+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:00:23.386+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:00:23.678+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:00:23.790+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:00:23.911+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:00:23.924+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:00:23.933+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.315 seconds (JVM running for 3.781)
03:00:25.581+0900 [http-nio-3000-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:00:25.581+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:00:25.582+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
03:00:25.701+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
03:00:25.702+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
03:00:25.702+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
03:00:25.720+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
03:00:25.720+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:00:25.729+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:00:25.758+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
03:00:25.759+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
03:00:25.759+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 3.0
03:00:25.759+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
03:00:25.759+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
03:00:25.759+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
03:00:25.759+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
03:00:25.768+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
03:00:25.768+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
03:00:25.769+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
03:00:25.769+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: c29bb7b6-540b-418d-a892-7d477fdbb66a.png
03:00:25.769+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
03:00:26.052+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1d9cf0f2, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6eca1e31, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@753664b4]
03:00:26.052+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/c29bb7b6-540b-418d-a892-7d477fdbb66a.png
03:00:26.052+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - line: [1.5, 2.12, 3.31, 4.25]
03:00:26.052+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - line: [1.64, 9.51, 1.51243, 12.124512]
03:00:26.053+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - line: [1.54, 1.25]
03:00:26.053+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
03:00:26.053+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환할 리스트: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25, 1.54, 1.25]]
03:00:26.056+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
03:00:26.059+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
03:00:26.060+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
03:00:26.060+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
03:00:26.060+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 3.0
03:00:26.060+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
03:00:26.060+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
03:00:26.061+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/c29bb7b6-540b-418d-a892-7d477fdbb66a.png
03:00:26.061+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
03:00:26.061+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
03:00:26.061+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
03:00:26.066+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 223
03:00:26.067+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
03:00:26.067+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
03:00:26.362+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
03:00:26.363+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
03:00:26.363+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:00:26.363+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:00:26.363+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:00:26.363+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:00:26.363+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:00:26.363+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:00:26.363+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
03:00:26.365+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 334
03:00:26.365+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:00:26.365+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
03:00:26.365+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
03:00:26.365+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 223
03:00:26.366+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
03:00:26.367+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 335
03:00:26.367+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:00:26.367+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
03:00:26.367+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
03:00:26.367+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 223
03:00:26.367+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
03:00:26.369+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 336
03:00:26.369+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:00:26.369+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
03:00:26.369+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
03:00:26.369+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 223
03:00:26.369+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
03:00:26.370+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
03:00:26.374+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
03:00:26.376+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
03:00:26.378+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
03:00:26.378+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
03:00:26.378+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [338->334, 339->335, 340->335, 341->335, 342->335, 343->336]
03:00:26.379+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
03:00:26.381+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
03:00:26.383+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 0
03:00:26.383+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 0
03:04:19.425+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
03:04:19.425+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
03:04:19.425+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
03:04:19.426+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
03:04:19.426+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:04:19.426+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:04:19.427+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
03:04:19.427+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
03:04:19.427+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 3.0
03:04:19.427+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
03:04:19.427+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
03:04:19.427+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
03:04:19.427+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
03:04:19.428+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
03:04:19.428+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
03:04:19.428+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
03:04:19.428+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: 8c3825ea-c9dd-424d-b3d2-e12e5b6a0a8b.png
03:04:19.428+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
03:04:19.612+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@71cefbd1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4e1a9f52, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3f8e44fe]
03:04:19.612+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/8c3825ea-c9dd-424d-b3d2-e12e5b6a0a8b.png
03:04:19.612+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - line: [1.5, 2.12, 3.31, 4.25]
03:04:19.612+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - line: [1.64, 9.51, 1.51243, 12.124512]
03:04:19.612+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - line: [1.54, 1.25]
03:04:19.612+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
03:04:19.612+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환할 리스트: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25, 1.54, 1.25]]
03:04:19.613+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
03:04:19.614+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
03:04:19.614+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
03:04:19.614+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
03:04:19.614+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 3.0
03:04:19.614+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
03:04:19.614+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
03:04:19.614+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/8c3825ea-c9dd-424d-b3d2-e12e5b6a0a8b.png
03:04:19.614+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
03:04:19.615+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
03:04:19.615+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
03:04:19.616+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 224
03:04:19.616+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
03:04:19.616+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
03:04:19.911+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
03:04:19.912+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
03:04:19.912+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:04:19.912+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:04:19.912+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:04:19.912+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:04:19.912+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:04:19.912+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:04:19.912+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
03:04:19.915+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 337
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 224
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 338
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 224
03:04:19.916+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
03:04:19.917+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 339
03:04:19.917+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:04:19.917+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
03:04:19.917+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
03:04:19.917+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 224
03:04:19.917+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 0
03:04:19.918+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
03:04:19.921+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
03:04:19.921+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
03:04:19.923+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
03:04:19.924+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
03:04:19.924+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [344->337, 345->338, 346->338, 347->338, 348->338, 349->339]
03:04:19.925+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
03:04:19.926+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
03:04:19.927+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 0
03:04:19.927+0900 [http-nio-3000-exec-5] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 2
03:07:25.413+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:07:25.413+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:07:25.419+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:07:30.053+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 13432 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:07:30.057+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:07:30.500+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:07:30.513+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 JPA repository interfaces.
03:07:30.604+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:07:30.711+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:07:30.712+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:07:30.717+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:07:30.718+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:07:30.718+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:07:30.884+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:07:30.890+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:07:30.891+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:07:30.891+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:07:30.990+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:07:30.990+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 909 ms
03:07:31.058+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:07:31.257+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:07:31.285+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:07:31.314+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:07:31.380+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:07:31.402+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:07:31.471+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:07:31.561+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:07:31.567+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:07:31.859+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:07:31.966+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:07:32.078+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:07:32.088+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:07:32.098+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.292 seconds (JVM running for 3.743)
03:07:37.893+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:07:37.893+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:07:37.893+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
03:07:38.003+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
03:07:38.004+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
03:07:38.005+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
03:07:38.021+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
03:07:38.021+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:07:38.028+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:07:38.053+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
03:07:38.053+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
03:07:38.053+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 3.0
03:07:38.053+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
03:07:38.053+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
03:07:38.053+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
03:07:38.054+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
03:07:38.062+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
03:07:38.062+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
03:07:38.062+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
03:07:38.063+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: 7ed5c422-3d5a-43ec-9cde-6ee471683fd5.png
03:07:38.063+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
03:07:38.375+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2b0dafbb, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@616c16cb, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@75c07fcd]
03:07:38.376+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/7ed5c422-3d5a-43ec-9cde-6ee471683fd5.png
03:07:38.376+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.5, 2.12, 3.31, 4.25]
03:07:38.376+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.64, 9.51, 1.51243, 12.124512]
03:07:38.376+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.54, 1.25]
03:07:38.376+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
03:07:38.376+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환할 리스트: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25, 1.54, 1.25]]
03:07:38.379+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
03:07:38.380+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
03:07:38.381+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
03:07:38.381+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
03:07:38.381+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 3.0
03:07:38.381+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
03:07:38.381+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
03:07:38.381+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/7ed5c422-3d5a-43ec-9cde-6ee471683fd5.png
03:07:38.381+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
03:07:38.381+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
03:07:38.381+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
03:07:38.392+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 225
03:07:38.392+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
03:07:38.392+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
03:07:38.724+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
03:07:38.724+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
03:07:38.724+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:07:38.724+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:07:38.724+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:07:38.724+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:07:38.724+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:07:38.724+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:07:38.724+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
03:07:38.728+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 340
03:07:38.728+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:07:38.728+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
03:07:38.728+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
03:07:38.728+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 225
03:07:38.728+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:07:38.729+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 341
03:07:38.729+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:07:38.729+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
03:07:38.729+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
03:07:38.729+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 225
03:07:38.729+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:07:38.730+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 342
03:07:38.730+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:07:38.730+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
03:07:38.730+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
03:07:38.730+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 225
03:07:38.730+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:07:38.731+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
03:07:38.735+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
03:07:38.737+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
03:07:38.739+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
03:07:38.740+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
03:07:38.740+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [350->340, 351->341, 352->341, 353->341, 354->341, 355->342]
03:07:38.740+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
03:07:38.743+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
03:07:38.745+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 0
03:07:38.745+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 2
03:07:38.745+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkProvider - 원래 가지고 있던 뱃지들: [1, 2]
03:07:38.745+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 11. 얻은 뱃지 리스트 UserBadge 테이블에 삽입
03:07:38.746+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 새롭게 얻은 뱃지 리스트: []
03:07:38.746+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 12. 뱃지 리스트로 이름과 url 반환 후 request 객체에 저장
03:13:27.253+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:13:27.255+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:13:27.261+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:13:31.942+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 18692 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:13:31.948+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:13:32.444+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:13:32.457+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
03:13:32.552+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:13:32.680+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7b1e5e55' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:13:32.681+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#661fe025' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:13:32.685+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#65e22def' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:13:32.686+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:13:32.686+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:13:32.878+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:13:32.883+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:13:32.883+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:13:32.883+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:13:32.979+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:13:32.979+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1007 ms
03:13:33.045+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:13:33.258+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:13:33.291+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:13:33.322+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:13:33.393+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:13:33.415+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:13:33.484+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:13:33.573+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:13:33.579+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:13:33.882+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:13:34.002+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:13:34.138+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:13:34.152+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:13:34.163+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.477 seconds (JVM running for 3.92)
03:13:55.890+0900 [http-nio-3000-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:13:55.890+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:13:55.891+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
03:13:56.002+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
03:13:56.002+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
03:13:56.002+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
03:13:56.019+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
03:13:56.019+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:13:56.025+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:13:56.049+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
03:13:56.049+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
03:13:56.050+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 10.0
03:13:56.050+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
03:13:56.050+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
03:13:56.050+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
03:13:56.050+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
03:13:56.058+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
03:13:56.058+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
03:13:56.058+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
03:13:56.058+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: 51a1642c-76d9-484b-85e1-74ed7e8d2b1b.png
03:13:56.059+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
03:13:56.337+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6d19cba6, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@15c93ea3, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@264c8a9]
03:13:56.337+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/51a1642c-76d9-484b-85e1-74ed7e8d2b1b.png
03:13:56.337+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - line: [1.5, 2.12, 3.31, 4.25]
03:13:56.338+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - line: [1.64, 9.51, 1.51243, 12.124512]
03:13:56.338+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - line: [1.54, 1.25]
03:13:56.338+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
03:13:56.338+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환할 리스트: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25, 1.54, 1.25]]
03:13:56.341+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
03:13:56.342+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
03:13:56.343+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
03:13:56.343+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
03:13:56.343+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 10.0
03:13:56.343+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
03:13:56.343+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
03:13:56.343+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/51a1642c-76d9-484b-85e1-74ed7e8d2b1b.png
03:13:56.343+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
03:13:56.343+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
03:13:56.343+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
03:13:56.351+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 226
03:13:56.351+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
03:13:56.351+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
03:13:56.675+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
03:13:56.675+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
03:13:56.675+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:13:56.675+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:13:56.676+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:13:56.676+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:13:56.676+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:13:56.676+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:13:56.676+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
03:13:56.679+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 343
03:13:56.679+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:13:56.679+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
03:13:56.679+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
03:13:56.679+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 226
03:13:56.679+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:13:56.681+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 344
03:13:56.681+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:13:56.681+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
03:13:56.681+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
03:13:56.681+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 226
03:13:56.681+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:13:56.682+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 345
03:13:56.683+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:13:56.683+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
03:13:56.683+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
03:13:56.683+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 226
03:13:56.683+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:13:56.683+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
03:13:56.686+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
03:13:56.688+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
03:13:56.690+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
03:13:56.690+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
03:13:56.690+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [356->343, 357->344, 358->344, 359->344, 360->344, 361->345]
03:13:56.691+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
03:13:56.693+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
03:13:56.695+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 0
03:13:56.695+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 2
03:13:56.696+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkProvider - 원래 가지고 있던 뱃지들: []
03:13:56.697+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 11. 얻은 뱃지 리스트 UserBadge 테이블에 삽입
03:13:56.699+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 새롭게 얻은 뱃지 리스트: [2, 1]
03:13:56.699+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 12. 뱃지 리스트로 이름과 url 반환 후 request 객체에 저장
03:13:56.701+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - response로 반환할 뱃지 이름: java.util.stream.ReferencePipeline$3@6a6db18b
03:15:01.915+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:15:01.916+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:15:01.923+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:15:06.267+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 14164 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:15:06.270+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:15:06.724+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:15:06.737+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
03:15:06.834+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:15:06.954+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:15:06.955+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:15:06.960+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:15:06.961+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:15:06.961+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:15:07.136+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:15:07.141+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:15:07.142+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:15:07.142+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:15:07.240+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:15:07.240+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 943 ms
03:15:07.306+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:15:07.513+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:15:07.542+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:15:07.573+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:15:07.649+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:15:07.671+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:15:07.757+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:15:07.870+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:15:07.876+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:15:08.204+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:15:08.309+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:15:08.433+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:15:08.445+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:15:08.456+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.455 seconds (JVM running for 3.997)
03:15:57.409+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:15:57.411+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:15:57.417+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:16:01.775+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 7576 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:16:01.779+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:16:02.265+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:16:02.280+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 JPA repository interfaces.
03:16:02.379+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:16:02.522+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:16:02.524+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:16:02.529+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:16:02.530+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:16:02.531+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:16:02.731+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:16:02.738+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:16:02.739+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:16:02.739+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:16:02.848+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:16:02.848+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1044 ms
03:16:02.926+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:16:03.149+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:16:03.176+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:16:03.201+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:16:03.263+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:16:03.286+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:16:03.356+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:16:03.453+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:16:03.459+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:16:03.751+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:16:03.886+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:16:04.005+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:16:04.016+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:16:04.026+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.513 seconds (JVM running for 4.042)
03:16:08.823+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:16:08.824+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:16:08.824+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
03:16:08.932+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
03:16:08.933+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
03:16:08.933+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
03:16:08.950+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
03:16:08.950+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:16:08.956+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:16:08.983+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
03:16:08.983+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
03:16:08.983+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 10.0
03:16:08.983+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
03:16:08.983+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
03:16:08.984+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
03:16:08.984+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
03:16:08.992+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
03:16:08.992+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
03:16:08.992+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
03:16:08.992+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: 45482253-c917-4df9-b00b-489ca3890fc0.png
03:16:08.993+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
03:16:09.297+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@586a8744, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@482699fd, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@24066d95]
03:16:09.297+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/45482253-c917-4df9-b00b-489ca3890fc0.png
03:16:09.297+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.5, 2.12, 3.31, 4.25]
03:16:09.298+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.64, 9.51, 1.51243, 12.124512]
03:16:09.298+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.54, 1.25]
03:16:09.298+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
03:16:09.298+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환할 리스트: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25, 1.54, 1.25]]
03:16:09.301+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
03:16:09.304+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
03:16:09.304+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
03:16:09.304+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
03:16:09.305+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 10.0
03:16:09.305+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
03:16:09.305+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
03:16:09.305+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/45482253-c917-4df9-b00b-489ca3890fc0.png
03:16:09.305+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
03:16:09.305+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
03:16:09.305+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
03:16:09.311+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 227
03:16:09.312+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
03:16:09.312+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
03:16:09.656+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
03:16:09.657+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
03:16:09.657+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:16:09.657+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:16:09.657+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:16:09.657+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:16:09.657+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:16:09.657+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:16:09.657+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
03:16:09.661+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 346
03:16:09.661+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:16:09.661+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
03:16:09.661+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
03:16:09.661+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 227
03:16:09.661+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:16:09.663+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 347
03:16:09.663+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:16:09.663+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
03:16:09.663+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
03:16:09.663+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 227
03:16:09.663+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:16:09.665+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 348
03:16:09.665+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:16:09.665+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
03:16:09.665+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
03:16:09.665+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 227
03:16:09.665+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:16:09.665+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
03:16:09.669+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
03:16:09.672+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
03:16:09.674+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
03:16:09.674+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
03:16:09.674+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [362->346, 363->347, 364->347, 365->347, 366->347, 367->348]
03:16:09.675+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
03:16:09.678+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
03:16:09.681+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 0
03:16:09.681+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 2
03:16:09.682+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkProvider - 원래 가지고 있던 뱃지들: []
03:16:09.682+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 11. 얻은 뱃지 리스트 UserBadge 테이블에 삽입
03:16:09.684+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 새롭게 얻은 뱃지 리스트: [2, 1]
03:16:09.684+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 12. 뱃지 리스트로 이름과 url 반환 후 request 객체에 저장
03:16:09.686+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - response로 반환할 뱃지 이름: 누적 10km
03:21:39.441+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:21:39.444+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:21:39.461+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:21:43.771+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 24656 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:21:43.775+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:21:44.243+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:21:44.256+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
03:21:44.335+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:21:44.463+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:21:44.464+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:21:44.469+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:21:44.470+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:21:44.471+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:21:44.661+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:21:44.669+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:21:44.669+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:21:44.670+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:21:44.781+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:21:44.782+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 981 ms
03:21:44.859+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:21:45.107+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:21:45.136+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:21:45.162+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:21:45.236+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:21:45.258+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:21:45.335+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:21:45.426+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:21:45.432+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:21:45.723+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:21:45.867+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:21:46.013+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:21:46.028+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:21:46.040+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.534 seconds (JVM running for 4.069)
03:21:47.971+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:21:47.972+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:21:47.973+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
03:21:48.083+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
03:21:48.083+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
03:21:48.083+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
03:21:48.101+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
03:21:48.102+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:21:48.108+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:21:48.133+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
03:21:48.133+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
03:21:48.133+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 10.0
03:21:48.134+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
03:21:48.134+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
03:21:48.134+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
03:21:48.134+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
03:21:48.144+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
03:21:48.145+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
03:21:48.145+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
03:21:48.145+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: b932b7c8-5b48-4972-b88c-13ccf4bd37a3.png
03:21:48.145+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
03:21:48.510+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3f1602eb, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6ef3226d, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2278af65]
03:21:48.510+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/b932b7c8-5b48-4972-b88c-13ccf4bd37a3.png
03:21:48.510+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.5, 2.12, 3.31, 4.25]
03:21:48.510+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.64, 9.51, 1.51243, 12.124512]
03:21:48.510+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.54, 1.25]
03:21:48.510+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
03:21:48.510+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환할 리스트: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25, 1.54, 1.25]]
03:21:48.513+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
03:21:48.515+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
03:21:48.516+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
03:21:48.516+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
03:21:48.516+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 10.0
03:21:48.516+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
03:21:48.516+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
03:21:48.516+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/b932b7c8-5b48-4972-b88c-13ccf4bd37a3.png
03:21:48.516+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
03:21:48.517+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
03:21:48.517+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
03:21:48.524+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 228
03:21:48.524+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
03:21:48.524+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
03:21:48.904+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
03:21:48.904+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
03:21:48.905+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:21:48.905+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:21:48.905+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:21:48.905+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:21:48.905+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:21:48.905+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:21:48.905+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
03:21:48.907+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 349
03:21:48.907+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:21:48.907+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
03:21:48.907+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
03:21:48.907+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 228
03:21:48.907+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:21:48.908+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 350
03:21:48.908+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:21:48.908+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
03:21:48.908+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
03:21:48.908+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 228
03:21:48.908+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:21:48.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 351
03:21:48.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:21:48.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
03:21:48.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
03:21:48.909+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 228
03:21:48.910+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:21:48.910+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
03:21:48.913+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
03:21:48.915+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
03:21:48.917+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
03:21:48.918+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
03:21:48.918+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [368->349, 369->350, 370->350, 371->350, 372->350, 373->351]
03:21:48.919+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
03:21:48.923+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
03:21:48.926+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 1
03:21:48.926+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 2
03:21:48.927+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkProvider - 원래 가지고 있던 뱃지들: []
03:21:48.927+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 11. 얻은 뱃지 리스트 UserBadge 테이블에 삽입
03:21:48.930+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 새롭게 얻은 뱃지 리스트: [2, 1]
03:21:48.930+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 12. 뱃지 리스트로 이름과 url 반환 후 request 객체에 저장
03:21:48.934+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - response로 반환할 뱃지 이름: [누적 10km, 발자국 스타터]
03:28:49.690+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:28:49.692+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:28:49.700+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:28:53.739+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 13228 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:28:53.743+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:28:54.183+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:28:54.196+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
03:28:54.278+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:28:54.397+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:28:54.398+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:28:54.403+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:28:54.404+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:28:54.405+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:28:54.584+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:28:54.590+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:28:54.590+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:28:54.591+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:28:54.687+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:28:54.688+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 922 ms
03:28:54.757+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:28:54.942+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:28:54.972+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:28:55.002+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:28:55.084+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:28:55.103+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:28:55.168+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:28:55.251+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:28:55.257+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:28:55.531+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:28:55.653+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:28:55.762+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:28:55.777+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:28:55.787+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.281 seconds (JVM running for 3.662)
03:28:59.364+0900 [http-nio-3000-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:28:59.365+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:28:59.365+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
03:28:59.479+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
03:28:59.479+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
03:28:59.479+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
03:28:59.496+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
03:28:59.496+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:28:59.502+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:28:59.527+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
03:28:59.527+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
03:28:59.527+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 10.0
03:28:59.528+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
03:28:59.528+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
03:28:59.528+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
03:28:59.528+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
03:28:59.537+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
03:28:59.538+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
03:28:59.538+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
03:28:59.538+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: 1c34ffa0-92f1-49dd-aab2-eb3994e56f83.png
03:28:59.538+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
03:28:59.860+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7a511f15, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3a9e73d8, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2877a44f]
03:28:59.861+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/1c34ffa0-92f1-49dd-aab2-eb3994e56f83.png
03:28:59.861+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - line: [1.5, 2.12, 3.31, 4.25]
03:28:59.861+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - line: [1.64, 9.51, 1.51243, 12.124512]
03:28:59.861+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - line: [1.54, 1.25]
03:28:59.861+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
03:28:59.861+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환할 리스트: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25, 1.54, 1.25]]
03:28:59.864+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
03:28:59.865+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
03:28:59.866+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
03:28:59.866+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
03:28:59.866+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 10.0
03:28:59.866+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
03:28:59.866+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
03:28:59.866+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/1c34ffa0-92f1-49dd-aab2-eb3994e56f83.png
03:28:59.866+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
03:28:59.866+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
03:28:59.867+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
03:28:59.874+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 229
03:28:59.874+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
03:28:59.874+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
03:29:00.190+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
03:29:00.191+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
03:29:00.191+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:29:00.191+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:29:00.191+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:29:00.191+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:29:00.191+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:29:00.191+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:29:00.191+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
03:29:00.194+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 352
03:29:00.194+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:29:00.194+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
03:29:00.194+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
03:29:00.194+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 229
03:29:00.194+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:29:00.195+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 353
03:29:00.195+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:29:00.195+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
03:29:00.195+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
03:29:00.195+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 229
03:29:00.195+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:29:00.196+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 354
03:29:00.196+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:29:00.196+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
03:29:00.196+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
03:29:00.196+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 229
03:29:00.196+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:29:00.197+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
03:29:00.200+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
03:29:00.204+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
03:29:00.206+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
03:29:00.206+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
03:29:00.206+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [374->352, 375->353, 376->353, 377->353, 378->353, 379->354]
03:29:00.207+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
03:29:00.209+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
03:29:00.211+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 1
03:29:00.211+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 2
03:29:00.212+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkProvider - 원래 가지고 있던 뱃지들: []
03:29:00.212+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 11. 얻은 뱃지 리스트 UserBadge 테이블에 삽입
03:29:00.214+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 새롭게 얻은 뱃지 리스트: [2, 1]
03:29:00.214+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - 12. 뱃지 리스트로 이름과 url 반환 후 request 객체에 저장
03:29:00.216+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.walks.WalkService - response로 반환할 뱃지 이름: [발자국 스타터, 누적 10km]
03:30:10.520+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:30:10.522+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:30:10.528+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:30:14.956+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 8864 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:30:14.961+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:30:15.429+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:30:15.443+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
03:30:15.524+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:30:15.650+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:30:15.651+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:30:15.657+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:30:15.658+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:30:15.659+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:30:15.835+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:30:15.841+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:30:15.841+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:30:15.842+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:30:15.939+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:30:15.939+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 951 ms
03:30:16.010+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:30:16.210+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:30:16.238+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:30:16.272+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:30:16.342+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:30:16.363+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:30:16.429+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:30:16.511+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:30:16.517+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:30:16.805+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:30:16.933+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:30:17.056+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:30:17.069+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:30:17.078+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.381 seconds (JVM running for 3.784)
03:30:31.373+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:30:31.374+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:30:31.374+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
03:30:31.481+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
03:30:31.482+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
03:30:31.482+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
03:30:31.499+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
03:30:31.499+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:30:31.504+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:30:31.531+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
03:30:31.531+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
03:30:31.531+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 10.0
03:30:31.531+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
03:30:31.531+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
03:30:31.531+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
03:30:31.532+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
03:30:31.540+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
03:30:31.540+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
03:30:31.541+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
03:30:31.541+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: e8065580-6859-439b-b395-192765883803.png
03:30:31.541+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
03:30:31.846+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@d7098a, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6d489b22, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@79e372c1]
03:30:31.846+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/e8065580-6859-439b-b395-192765883803.png
03:30:31.846+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.5, 2.12, 3.31, 4.25]
03:30:31.846+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.64, 9.51, 1.51243, 12.124512]
03:30:31.846+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.54, 1.25]
03:30:31.846+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
03:30:31.846+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환할 리스트: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25, 1.54, 1.25]]
03:30:31.849+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
03:30:31.851+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
03:30:31.852+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
03:30:31.852+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
03:30:31.852+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 10.0
03:30:31.853+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
03:30:31.853+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
03:30:31.853+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/e8065580-6859-439b-b395-192765883803.png
03:30:31.853+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
03:30:31.853+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
03:30:31.853+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
03:30:31.860+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 230
03:30:31.860+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
03:30:31.861+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
03:30:32.157+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
03:30:32.157+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
03:30:32.157+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:30:32.157+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:30:32.157+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:30:32.157+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:30:32.157+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:30:32.157+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:30:32.157+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
03:30:32.161+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 355
03:30:32.161+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:30:32.162+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
03:30:32.162+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
03:30:32.162+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 230
03:30:32.162+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:30:32.164+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 356
03:30:32.165+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:30:32.165+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
03:30:32.165+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
03:30:32.165+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 230
03:30:32.165+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:30:32.167+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 357
03:30:32.167+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:30:32.167+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
03:30:32.167+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
03:30:32.167+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 230
03:30:32.167+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:30:32.167+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
03:30:32.172+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
03:30:32.174+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
03:30:32.177+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
03:30:32.178+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
03:30:32.178+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [380->355, 381->356, 382->356, 383->356, 384->356, 385->357]
03:30:32.178+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
03:30:32.182+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
03:30:32.184+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 1
03:30:32.185+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 2
03:30:32.186+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkProvider - 원래 가지고 있던 뱃지들: []
03:30:32.186+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 11. 얻은 뱃지 리스트 UserBadge 테이블에 삽입
03:30:32.189+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 새롭게 얻은 뱃지 리스트: [2, 1]
03:30:32.189+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 12. 뱃지 리스트로 이름과 url 반환 후 request 객체에 저장
03:30:32.192+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - response로 반환할 뱃지 이름: [누적 10km, 발자국 스타터]
03:34:10.532+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:34:10.534+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:34:10.541+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:34:14.576+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 14984 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:34:14.580+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:34:14.995+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:34:15.007+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
03:34:15.094+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:34:15.198+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:34:15.199+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:34:15.204+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:34:15.205+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:34:15.206+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:34:15.380+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:34:15.386+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:34:15.386+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:34:15.387+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:34:15.479+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:34:15.480+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 876 ms
03:34:15.548+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:34:15.733+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:34:15.761+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:34:15.795+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:34:15.860+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:34:15.880+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:34:15.947+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:34:16.032+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:34:16.037+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:34:16.314+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:34:16.416+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:34:16.524+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:34:16.535+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:34:16.544+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.199 seconds (JVM running for 3.569)
03:34:19.164+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:34:19.164+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:34:19.165+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
03:34:19.274+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 1. JWT 추출
03:34:19.275+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - accessToken = eyJ0eXBlIjoiand0IiwiYWxnIjoiSFMyNTYifQ.eyJ1c2VySWQiOiIxMjMxMTIzNDUxMjQiLCJpYXQiOjE2NDQ1OTAxNjksImV4cCI6MTY0NzE4MjE2OX0.gY4TP72qB649HWtcPACkLa4A3Wr01G8i5YUyjns3ALo
03:34:19.275+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 2. JWT parsing
03:34:19.292+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - userId = 123112345124
03:34:19.292+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:34:19.298+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:34:19.323+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk startAt: 2022-02-13T12:30:40
03:34:19.324+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk endAt: 2022-02-13T12:40:40
03:34:19.324+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk distance: 10.0
03:34:19.324+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk userIdx: 7
03:34:19.324+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk coordinate: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25]]
03:34:19.324+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk calorie: 140
03:34:19.324+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkController - walk photoMatchNumList: [1, 1, 1]
03:34:19.333+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - Validation 1. 사진이 하나도 안왔을 때
03:34:19.334+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 1. 동선 이미지: file -> url 
03:34:19.334+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 파일 이름: 2021-03-08.png
03:34:19.334+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 변환된 파일 이름: 46dea154-0b69-41ca-9c5e-ed9a9178def4.png
03:34:19.335+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - content type: image/png
03:34:19.672+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지가 빠진 사진 리스트: [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@43308c3c, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@43560901, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@40187e65]
03:34:19.672+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 동선 이미지 url: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/46dea154-0b69-41ca-9c5e-ed9a9178def4.png
03:34:19.672+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.5, 2.12, 3.31, 4.25]
03:34:19.672+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.64, 9.51, 1.51243, 12.124512]
03:34:19.672+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - line: [1.54, 1.25]
03:34:19.673+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 2. url로 바꾼 동선 이미지 SaveWalk 객체에 저장
03:34:19.673+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환할 리스트: [[1.5, 2.12, 3.31, 4.25], [1.64, 9.51, 1.51243, 12.124512], [1.54, 1.25, 1.54, 1.25]]
03:34:19.675+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - userIdx: 7
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 3. Walk 테이블에 insert 후 walkIdx 반환
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk startAt: 2022-02-13T12:30:40
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk endAt: 2022-02-13T12:40:40
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk distance: 10.0
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk userIdx: 7
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk strCoordinate: MULTILINESTRING((1.5 2.12,3.31 4.25),(1.64 9.51,1.51243 12.124512),(1.54 1.25,1.54 1.25))
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk pathImgUrl: https://mystepsbucket.s3.ap-northeast-2.amazonaws.com/46dea154-0b69-41ca-9c5e-ed9a9178def4.png
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk goalRate: 30.303032
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk calorie: 140
03:34:19.677+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - walk photoMatchNumList: [1, 1, 1]
03:34:19.684+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 생성된 walkIdx: 231
03:34:19.684+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 발자국 기록이 존재할 때
03:34:19.684+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 4. 발자국 기록 사진들 List<MultipartFile> -> List<String> 으로 변환
03:34:20.056+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.AwsS3Service - 첫번째 파일의 extension: .png
03:34:20.056+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 5. 발자국 좌표 List<Double> -> String 으로 변환 후 SaveFootprint 객체에 저장
03:34:20.057+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:34:20.057+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:34:20.057+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:34:20.057+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:34:20.057+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - string 형으로 바꿀 list: [10.0, 12.0] 
03:34:20.057+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - String으로 변환된 발자국 좌표
03:34:20.057+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 6. Footprint 테이블에 삽입후 footprintIdx SaveFootprint 테이블에 삽입
03:34:20.059+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 358
03:34:20.059+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:34:20.059+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: 오늘은 산책을 하다가 #길냥이 를 보았다. 귀여워서 쫓아갔는데 바로 사라져서 아쉽다 ㅠ.ㅠ 다음부터는 츄르를 챙기고 다녀야지
03:34:20.059+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:30:40
03:34:20.059+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 231
03:34:20.059+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:34:20.060+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 359
03:34:20.060+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:34:20.060+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #속초 여행 중 찍은 풍경! 날씨도 좋고 풍경도 예뻐서 잔뜩 힐링이 된 여행덕분에 생각 정리도 하기 좋았다.잘 있어 속초! #여행 #하늘 #힐링
03:34:20.060+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:35:40
03:34:20.060+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 231
03:34:20.060+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:34:20.061+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 인덱스: 360
03:34:20.061+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 좌표(String): POINT(10.0 12.0)
03:34:20.061+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 내용: #냐옹 소리가 나서 가봤더니 검정고양이가 나를 반겨주고 있었다. 냐옹 건강해!
03:34:20.061+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 기록 시간: 2022-02-05T13:40:40
03:34:20.061+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 walkIdx: 231
03:34:20.061+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 onWalk: 0
03:34:20.061+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 7. Photo 테이블에 삽입
03:34:20.064+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 8. Hashtag 테이블에 삽입 후 매핑된 Idx 반환 
03:34:20.065+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#길냥이]
03:34:20.067+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#속초, #여행, #하늘, #힐링]
03:34:20.068+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 발자국 해시태그들: {}[#냐옹]
03:34:20.068+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - tag 인덱스들: [386->358, 387->359, 388->359, 389->359, 390->359, 391->360]
03:34:20.068+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 9. Tag 테이블에 삽입
03:34:20.072+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 10. badge 획득 여부 확인 후 얻은 badgeIdxList 반환
03:34:20.074+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 기록 관련 뱃지중 가장 큰 인덱스: 1
03:34:20.075+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkDao - 가지고 있던 거리 관련 뱃지중 가장 큰 인덱스: 2
03:34:20.075+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkProvider - 원래 가지고 있던 뱃지들: []
03:34:20.075+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 11. 얻은 뱃지 리스트 UserBadge 테이블에 삽입
03:34:20.077+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 새롭게 얻은 뱃지 리스트: [1, 2]
03:34:20.077+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - 12. 뱃지 리스트로 이름과 url 반환 후 request 객체에 저장
03:34:20.079+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.walks.WalkService - response로 반환할 뱃지 이름: [발자국 스타터, 누적 10km]
03:34:41.261+0900 [http-nio-3000-exec-3] INFO  com.umc.footprint.utils.JwtService - now = Tue Feb 15 03:34:41 KST 2022
03:34:41.261+0900 [http-nio-3000-exec-3] INFO  com.umc.footprint.utils.JwtService - expiryDate = Thu Mar 17 03:34:41 KST 2022
03:34:41.261+0900 [http-nio-3000-exec-3] INFO  com.umc.footprint.utils.JwtService - JwtSecretKey = UwKYibQQgkW7g-*k.ap9kje-wxBHb9wdXoBT4vnt4P3sJWt-Nu
03:34:41.268+0900 [http-nio-3000-exec-3] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:34:41.268+0900 [http-nio-3000-exec-3] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:38:06.288+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:38:06.290+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:38:06.297+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:38:10.890+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 20240 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:38:10.894+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:38:11.326+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:38:11.338+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
03:38:11.416+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:38:11.531+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:38:11.532+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:38:11.536+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:38:11.537+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:38:11.537+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:38:11.706+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:38:11.712+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:38:11.713+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:38:11.713+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:38:11.809+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:38:11.809+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 890 ms
03:38:11.880+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:38:12.086+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:38:12.114+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:38:12.140+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:38:12.209+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:38:12.231+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:38:12.302+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:38:12.391+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:38:12.397+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:38:12.691+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:38:12.817+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:38:12.941+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:38:12.954+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:38:12.963+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.313 seconds (JVM running for 3.698)
03:38:17.999+0900 [http-nio-3000-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:38:17.999+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:38:18.000+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
03:38:18.107+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - now = Tue Feb 15 03:38:18 KST 2022
03:38:18.108+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - expiryDate = Thu Mar 17 03:38:18 KST 2022
03:38:18.108+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - JwtSecretKey = UwKYibQQgkW7g-*k.ap9kje-wxBHb9wdXoBT4vnt4P3sJWt-Nu
03:38:18.132+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserService - 유저의 status: ACTIVE
03:38:18.133+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:38:18.134+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:38:18.138+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserService - 현재 시간: {}2022-02-15T03:38:18.137663900
03:39:39.365+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:39:39.367+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:39:39.375+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:39:44.679+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 14312 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:39:44.683+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:39:45.096+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:39:45.108+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 JPA repository interfaces.
03:39:45.182+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:39:45.297+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:39:45.298+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:39:45.302+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:39:45.303+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:39:45.303+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:39:45.469+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:39:45.475+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:39:45.475+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:39:45.476+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:39:45.570+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:39:45.570+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 859 ms
03:39:45.643+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:39:45.824+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:39:45.852+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:39:45.876+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:39:45.937+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:39:45.961+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:39:46.026+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:39:46.114+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:39:46.121+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:39:46.405+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:39:46.525+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:39:46.634+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:39:46.645+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:39:46.655+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.216 seconds (JVM running for 3.575)
03:39:54.874+0900 [http-nio-3000-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:39:54.874+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:39:54.875+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
03:39:54.979+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - now = Tue Feb 15 03:39:54 KST 2022
03:39:54.979+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - expiryDate = Thu Mar 17 03:39:54 KST 2022
03:39:54.979+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - JwtSecretKey = UwKYibQQgkW7g-*k.ap9kje-wxBHb9wdXoBT4vnt4P3sJWt-Nu
03:39:55.002+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserService - 유저의 status: ACTIVE
03:39:55.003+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:39:55.004+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:39:55.008+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserService - 현재 시간: {}2022-02-15T03:39:55.008244300
03:40:21.045+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:40:21.047+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:40:21.055+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:40:25.032+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 18588 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:40:25.036+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:40:25.447+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:40:25.459+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 JPA repository interfaces.
03:40:25.536+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:40:25.645+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7b1e5e55' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:40:25.646+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#661fe025' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:40:25.651+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#65e22def' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:40:25.653+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:40:25.653+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:40:25.821+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:40:25.827+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:40:25.827+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:40:25.827+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:40:25.926+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:40:25.927+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 868 ms
03:40:25.995+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:40:26.188+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:40:26.217+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:40:26.245+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:40:26.321+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:40:26.345+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:40:26.409+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:40:26.492+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:40:26.498+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:40:26.764+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:40:26.883+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:40:26.998+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:40:27.010+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:40:27.020+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.225 seconds (JVM running for 3.573)
03:40:31.239+0900 [http-nio-3000-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:40:31.239+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:40:31.240+0900 [http-nio-3000-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
03:40:31.345+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - now = Tue Feb 15 03:40:31 KST 2022
03:40:31.345+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - expiryDate = Thu Mar 17 03:40:31 KST 2022
03:40:31.345+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.utils.JwtService - JwtSecretKey = UwKYibQQgkW7g-*k.ap9kje-wxBHb9wdXoBT4vnt4P3sJWt-Nu
03:40:31.366+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserService - 유저의 status: ACTIVE
03:40:31.368+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserProvider - UserProvider.getUserIdx
03:40:31.368+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:40:31.373+0900 [http-nio-3000-exec-1] INFO  com.umc.footprint.src.users.UserService - 현재 시간: 2022-02-15T03:40:31.372917700
03:41:57.729+0900 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
03:41:57.730+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
03:41:57.738+0900 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
03:42:02.009+0900 [main] INFO  com.umc.footprint.FootprintApplication - Starting FootprintApplication using Java 11.0.12 on DESKTOP-LIMRVNV with PID 22256 (D:\UMC\local_FootPrint\Footprint-Server\footprint\build\classes\java\main started by 이택승 in D:\UMC\local_FootPrint\Footprint-Server\footprint)
03:42:02.014+0900 [main] INFO  com.umc.footprint.FootprintApplication - No active profile set, falling back to default profiles: default
03:42:02.435+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03:42:02.448+0900 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
03:42:02.537+0900 [main] WARN  com.amazonaws.util.EC2MetadataUtils - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). EC2 Instance Metadata Service is disabled
com.amazonaws.AmazonClientException: EC2 Instance Metadata Service is disabled
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:65) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66) ~[aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402) [aws-java-sdk-core-1.11.792.jar:?]
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371) [aws-java-sdk-core-1.11.792.jar:?]
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38) [spring-cloud-aws-context-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) [spring-boot-2.6.2.jar:2.6.2]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.2.jar:2.6.2]
	at com.umc.footprint.FootprintApplication.main(FootprintApplication.java:17) [main/:?]
03:42:02.641+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#6d229b1c' of type [com.amazonaws.auth.BasicAWSCredentials] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:42:02.642+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#535b1ae6' of type [com.amazonaws.auth.AWSStaticCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:42:02.647+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean '(inner bean)#7645f03e' of type [com.amazonaws.auth.profile.ProfileCredentialsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:42:02.648+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [org.springframework.cloud.aws.core.credentials.CredentialsProviderFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:42:02.648+0900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsProvider' of type [com.amazonaws.auth.AWSCredentialsProviderChain] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
03:42:02.815+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 3000 (http)
03:42:02.820+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-3000"]
03:42:02.821+0900 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
03:42:02.821+0900 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
03:42:02.913+0900 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:42:02.913+0900 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 876 ms
03:42:02.982+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
03:42:03.170+0900 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
03:42:03.197+0900 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
03:42:03.232+0900 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.3.Final
03:42:03.295+0900 [main] INFO  org.hibernate.spatial.integration.SpatialService - HHH80000001: hibernate-spatial integration enabled : true
03:42:03.317+0900 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03:42:03.386+0900 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
03:42:03.472+0900 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03:42:03.478+0900 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
03:42:03.760+0900 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03:42:03.862+0900 [main] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
03:42:03.969+0900 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-3000"]
03:42:03.981+0900 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 3000 (http) with context path ''
03:42:03.990+0900 [main] INFO  com.umc.footprint.FootprintApplication - Started FootprintApplication in 2.218 seconds (JVM running for 3.599)
03:42:13.843+0900 [http-nio-3000-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:42:13.844+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:42:13.844+0900 [http-nio-3000-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
03:42:13.954+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.utils.JwtService - 만기 날짜: 2022-03-17T03:42:13.954+0900
03:42:13.975+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserService - 유저의 status: ACTIVE
03:42:13.977+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserDao - userId: 123112345124
03:42:13.985+0900 [http-nio-3000-exec-2] INFO  com.umc.footprint.src.users.UserService - 현재 시간: 2022-02-15T03:42:13.985968100
